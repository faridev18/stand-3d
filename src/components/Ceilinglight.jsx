/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Ceilinglight(props) {
  const { nodes, materials } = useGLTF("model/Ceiling_Light.glb");
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Light_Ceiling2_1.geometry}
          material={materials.Grey}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Light_Ceiling2_2.geometry}
          material={materials.LightMetal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Light_Ceiling2_3.geometry}
          material={materials.Light}
        >
            <meshStandardMaterial color={ "orange" } emissive="orange" emissiveIntensity={ 10 } toneMapped={ false } />
            {/* <meshStandardMaterial color={ [ 1.5, 1, 4 ] } toneMapped={ false } /> */}
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("model/Ceiling_Light.glb");
